{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","lastKey","keyBoardListener","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,IAFb,EAaEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEH,QAASE,EAAME,OAdnC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,oBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,oBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKR,MAAMC,QAAX,mCAC+BO,KAAKR,MAAMC,QAD1C,KAEG,kCAvBd,GAAyBU,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.222c5a4b.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    lastKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyBoardListener);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyBoardListener);\n  }\n\n  keyBoardListener = (event: KeyboardEvent) => {\n    this.setState({ lastKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.lastKey\n            ? `The last pressed key is [${this.state.lastKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}